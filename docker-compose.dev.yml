version: '3.8'

# Development docker-compose with hot reload and debugging

services:
  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nexus-backend-dev
    ports:
      - "5000:5000"
      - "9229:9229"  # Node.js debugger
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://mongodb:27017/nexus_ui_db_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - nexus-network-dev
    command: npm run dev

  # MongoDB (Development)
  mongodb:
    image: mongo:7.0-jammy
    container_name: nexus-mongodb-dev
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: nexus_ui_db_dev
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - nexus-network-dev

  # Redis (Development)
  redis:
    image: redis:7-alpine
    container_name: nexus-redis-dev
    ports:
      - "6379:6379"
    networks:
      - nexus-network-dev

  # Mongo Express (Database GUI)
  mongo-express:
    image: mongo-express:latest
    container_name: nexus-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - nexus-network-dev

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nexus-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - nexus-network-dev

volumes:
  mongodb_dev_data:
    driver: local

networks:
  nexus-network-dev:
    driver: bridge
